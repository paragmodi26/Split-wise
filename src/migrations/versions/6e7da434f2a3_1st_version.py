"""1st version

Revision ID: 6e7da434f2a3
Revises: 
Create Date: 2024-01-05 13:59:00.655518

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6e7da434f2a3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('amount_split',
    sa.Column('id', sa.SMALLINT(), nullable=False),
    sa.Column('group_id', sa.BIGINT(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('amount', sa.BIGINT(), nullable=True),
    sa.Column('relative_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='splitwise'
    )
    op.create_index('amount_split_group_id_key', 'amount_split', ['group_id'], unique=False, schema='splitwise')
    op.create_table('group',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('group_name', sa.VARCHAR(length=250), nullable=False),
    sa.Column('user_ids', postgresql.ARRAY(sa.BIGINT()), nullable=True),
    sa.Column('status', sa.SMALLINT(), nullable=False),
    sa.Column('owner_id', sa.BIGINT(), nullable=False),
    sa.Column('expense_name', sa.VARCHAR(length=250), nullable=False),
    sa.Column('comment', sa.VARCHAR(length=500), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='splitwise'
    )
    op.create_table('user',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=250), nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), nullable=False),
    sa.Column('mobile_number', sa.VARCHAR(length=100), nullable=True),
    sa.Column('status', sa.SMALLINT(), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='user_auth_email_key'),
    schema='splitwise'
    )
    op.create_index('user_email_key', 'user', ['email'], unique=False, schema='splitwise')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('user_email_key', table_name='user', schema='splitwise')
    op.drop_table('user', schema='splitwise')
    op.drop_table('group', schema='splitwise')
    op.drop_index('amount_split_group_id_key', table_name='amount_split', schema='splitwise')
    op.drop_table('amount_split', schema='splitwise')
    # ### end Alembic commands ###
